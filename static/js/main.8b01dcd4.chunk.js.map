{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["liff","init","liffId","sendAlertIfNotInClient","console","log","App","useState","QRtxt","setQRtxt","scanCount","setScanCount","scanQRCode","isInClient","scanCode","then","result","stringifiedResult","JSON","stringify","value","document","getElementById","textContent","catch","err","className","id","onClick","Message","sendMessages","closeWindow","error","window","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iOAAe,I,qBCMfA,IAAKC,KAAK,CAAEC,OAAQ,wBAEpB,IAAMC,EAAyB,WAAQC,QAAQC,IAAI,2BAuEpCC,MApDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAIPC,EAAa,WACZZ,IAAKa,aAGJb,IAAKc,UACLd,IAAKc,WAAWC,MAAK,SAAAC,GAEjB,IAAMC,EAAoBC,KAAKC,UAAUH,GACzCP,EAASO,EAAOI,OAChBC,SAASC,eAAe,eAAeC,YAAcN,EA/BhCb,QAAQC,IAAI,sBAiCjCM,EAAa,MACda,OAAM,SAAAC,GACLhB,EAAS,IACTY,SAASC,eAAe,eAAeC,YAAc,sBAZ7DpB,KAsBJ,OAJiB,GAAbO,GACFE,IAIA,sBAAKc,UAAU,MAAf,UAeE,qBAAKC,GAAG,gBACR,wBAAQC,QAAShB,EAAjB,0BACA,4BAAIJ,IACFA,GAAU,wBAAQoB,QAAS,kBA/DRC,EA+DgCrB,OA9DpDR,IAAKa,aAGNb,IAAK8B,aAAa,CAAC,CACf,KAAQ,OACR,KAAQD,KACRd,MAAK,WACPf,IAAK+B,iBACJP,OAAM,SAASQ,GACdC,OAAOC,MAAM,0BAA4BF,MAR/C7B,KAFsB,IAAC0B,GA+DT,qCC9DHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.8b01dcd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\n\nimport liff from '@line/liff';\n\nliff.init({ liffId: '1655180874-rpzb2gR5' });\n\nconst sendAlertIfNotInClient = () => { console.log('sendAlertIfNotInClient') }\nconst toggleQrCodeReader = () => { console.log('toggleQrCodeReader') }\n\nconst sendMessageButton = (Message) => {\n  if (!liff.isInClient()) {\n    sendAlertIfNotInClient();\n  } else {\n      liff.sendMessages([{\n          'type': 'text',\n          'text': Message\n      }]).then(function() {\n        liff.closeWindow();\n      }).catch(function(error) {\n          window.alert('Error sending message: ' + error);\n      });\n  }\n}\n\n\nfunction App() {\n  const [QRtxt, setQRtxt] = useState('');\n  const [scanCount, setScanCount] = useState(0);\n\n  const scanQRCode = () => {\n    if (!liff.isInClient()) {\n      sendAlertIfNotInClient();\n    } else {\n      if (liff.scanCode) {\n          liff.scanCode().then(result => {\n              // e.g. result = { value: \"Hello LIFF app!\" }\n              const stringifiedResult = JSON.stringify(result);\n              setQRtxt(result.value);\n              document.getElementById('scanQrField').textContent = stringifiedResult;\n              toggleQrCodeReader();\n              setScanCount(1)\n          }).catch(err => {\n              setQRtxt('')\n              document.getElementById('scanQrField').textContent = \"scanCode failed!\";\n          });\n      }\n    }\n  }\n\n  if (scanCount == 0) {\n    scanQRCode()\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <div id=\"scanQrField\" ></div>\n      <button onClick={scanQRCode} >Scan QR Code</button>\n      <p>{QRtxt}</p>\n      { QRtxt && (<button onClick={() => sendMessageButton(QRtxt)} >send Message Button</button>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}